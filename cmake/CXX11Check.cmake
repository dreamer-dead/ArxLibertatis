
include(CheckCXXSourceCompiles)
include(CompileCheck)

set(_HAS_CXX11 0)
set(CXX11_CHECK_DIR "${CMAKE_CURRENT_LIST_DIR}")

function(enable_cxx11)
	if(MSVC)
		if(NOT MSVC_VERSION LESS 1600)
			set(_HAS_CXX11 1 PARENT_SCOPE)
		endif()
	else()
		add_cxxflag("-std=c++11")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}" PARENT_SCOPE)
		if(FLAG_FOUND OR NOT CMAKE_COMPILER_IS_GNUCXX)
			if(SET_WARNING_FLAGS)
				add_cxxflag("-pedantic")
			endif()
			set(_HAS_CXX11 1 PARENT_SCOPE)
		endif()
	endif()
endfunction(enable_cxx11)

function(check_cxx11 CHECK RESULTVAR)
	if(${_HAS_CXX11})
		if(MSVC AND ARGC GREATER 2)
			if(MSVC_VERSION LESS ARGV2)
				set(result)
			else()
				set(result 1)
			endif()
		else()
			string(REGEX REPLACE "[^a-zA-Z0-9_][^a-zA-Z0-9_]*" "-" check "${CHECK}")
			set(file "${CXX11_CHECK_DIR}/check-cxx11-${check}.cpp")
			set(old_CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
			set(old_CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS}")
			strip_warning_flags(CMAKE_CXX_FLAGS)
			strip_warning_flags(CMAKE_EXE_LINKER_FLAGS)
			check_compile(result "${file}" "${CHECK}" "C++11 feature")
			set(CMAKE_CXX_FLAGS "${old_CMAKE_CXX_FLAGS}")
			set(CMAKE_EXE_LINKER_FLAGS "${old_CMAKE_EXE_LINKER_FLAGS}")
		endif()
		if("${result}" STREQUAL "")
			set(${RESULTVAR} OFF PARENT_SCOPE)
		else()
			set(${RESULTVAR} ON PARENT_SCOPE)
		endif()
	else()
		set(${RESULTVAR} OFF PARENT_SCOPE)
	endif()
endfunction()
